metadata
  name
    local: English
  creator: Natlang
syntax
  start-with: CP
  auto-setlang: AP; CP; IP; NP; PP; DP; VP; conjP; I
  node-types
    AP
      xbar: ~; ~; adjective; ~
      require: adjective
    CP
      xbar: ~; ~; complementizer; IP
    IP
      xbar: ~; ~; I; VP
    NP
      xbar: ~; AP?; noun; CP?
      require: noun
    PP
      xbar: ~; ~; preposition; DP
      require: preposition
    I
      structure: [I $t:tense $a:aspect? $m:mood?]
    DP
      variable: $head:determiner?
      option ($head(hasspec=true))
        xbar: DP; ~; $head; NP
        require: determiner
      option ($head(hasspec=false))
        xbar: ~; ~; $head; NP
        require: determiner
      option ($head!)
        xbar: ~; ~; $pro:pronoun; ~
        require: pronoun
    VP
      variable: $head:verb
      option ($head(objects=1); $head(object1=NP))
        xbar: DP; adverb?; $head; DP
        require: verb
      option ($head(objects=1); $head(object1=PP))
        xbar: DP; adverb?; $head; PP
        require: verb
      option ($head(objects=1); $head(object1=AP))
        xbar: DP; adverb?; $head; AP
        require: verb
      option ($head(objects=1); $head(object1=NP/AP))
        xbar: DP; adverb?; $head; DP
        require: verb
      option ($head(objects=1); $head(object1=NP/AP))
        xbar: DP; adverb?; $head; AP
        require: verb
      option ($head(objects=0))
        xbar: DP; adverb?; $head; ~
        require: verb
      option ($head(objects=1); $head(object1=CP))
        xbar: DP; adverb?; $head; CP
        require: verb
lexc: hfst
  split-root: _
  noun
    format: {root[0]}<n>{plural}{case}
    tags
      plural: number
        default: <SG>
      case: case
        default: <nom>
    in: NounRoot
    to: NounInfl
  verb
    format: {root[0]}<v>{tense}{person}{number}
    tags
      tense: tense
        default: <nonpst>
      person: person
        default: <3>
      number: number
        default: <SG>
    in: VerbRoot
    to: VerbInfl
  mood
    format: {root[0]}<aux>{tense}{person}{number}
    tags
      tense: tense
        default: <error>
      person: person
        default: <3>
      number: number
        default: <SG>
    in: AuxRoot
    to: AuxInfl
  aux
    format: {root[0]}<aux>{tense}{person}{number}
    tags
      tense: tense
        default: <error>
      person: person
        default: <3>
      number: number
        default: <SG>
    in: AuxRoot
    to: AuxInfl
  aspect
    format: {root[0]}<aux>{tense}{person}{number}
    tags
      tense: tense
        default: <error>
      person: person
        default: <3>
      number: number
        default: <SG>
    in: AuxRoot
    to: AuxInfl
  adjective
    bland: <adj>
  determiner
    bland: <det>
  pronoun
    bland: <prn>
  preposition
    bland: <prep>
  conjunction
    bland: <conj>
  adverb
    bland: <adv>
  quantifier
    bland: <quant>
  complementizer
    bland: <comp>
  rel-pronoun
    bland: <prn>
transform
#ditransitive verbs
  rule
    form: |[?vP ~ |[?VP $v]]
    result: |[?vP $v |[?VP ~]]
  #rule
  #  form: |[?VP ~ |[?vP $v]]
  #  result: |[?VP $v |[?vP ~]]
#TAM + agreement
  rule
    form: |[?IP [I $t? $aspect=have+been $mood?] |[VP $subj $m? $h? $c?]]
    result: |[?IP [I $t ~ $mood] |[?VP $subj aspect=have |[VP aspect=be |[VP ~ $m $h $c]]]]
  rule
    form: |[?IP [I $tense? $aspect $mood?] |[VP $subj $mod? $head $comp?]]
    result: |[?IP [I $tense ~ $mood] |[VP $subj $aspect |[VP ~ $mod $head $comp]]]
  rule
    form: |[?IP [I $tense? $aspect? $mood] |[?VP $subj $head $comp?]]
    result: |[?IP [I $tense $aspect ~] |[VP $subj $mood |[?VP ~ $head $comp]]]
  rule
    context: |[?CP complementizer=+Q @]
    form: |[?IP [I $tense? ~ ~] |[VP $subj $mod? $head $comp?]]
    result: |[?IP [I $tense ~ ~] |[VP $subj ~ aux=do |[VP ~ $mod $head $comp]]]
  rule
    context: |[VP $s1? $m1? $aux |[VP $s2? $m2? @ $c?]]
    form: $verb
    setprop (tense): $aux.conj
  rule
    context: |[?IP [I $tense * *] |[?VP @]]
    form: $head
    setprop (tense): $tense.tense
  rule
    context: |[?VP |[?DP $dh(is-rel=false)] @ $vc?]
    form: $verb
    setprop (number): $dh.number
    setprop (person): $dh.person
  rule
    context: |[?DP $dh |[?NP $nh? |[?CP $ch? |[?IP $ih? |[?VP |[?DP $s:rel-pronoun] @ $vc?]]]]]
    form: $verb
    setprop (person): $dh.person
    setprop (number): $dh.number
  rule
    context: |[CP * * complementizer=+Q @]
    form: |[IP ~ $mod $I |[VP $subj $vmod $head:aux $comp]]
    result: |[IP $head $mod $I |[VP $subj $vmod ~ $comp]]
#relative clauses
  rule
    form: |[IP ~ $imod? $i? |[?VP |[DP $subj:rel-pronoun] $head? $comp?]]
    result: |[IP |[DP $subj] $imod $i |[?VP ~ $head $comp]]
  rule
    form: |[IP ~ $imod? $i? |[VP $subj? $vmod? $v? |[DP $obj:rel-pronoun]]]
    result: |[IP |[DP $obj] $imod? $i? |[VP $subj? $vmod? $v? ~]]
  rule
    context: |[?NP $noun:noun @]
    form: |[CP ~ $cmod? complementizer=-Q |[IP |[DP $rel:rel-pronoun] $mod? $head? $comp?]]
    result: |[CP |[DP $rel] $cmod complementizer=-Q |[IP ~ $mod $head $comp]]
  rule
    context: |[?NP $noun:noun @]
    form: |[CP ~ $cmod? complementizer=-Q |[conjP |[IP |[DP $rel:rel-pronoun] $mod? $head? $comp?] $jmod? $j? $jbar?]]
    result: |[CP |[DP $rel] $cmod complementizer=-Q |[conjP |[IP ~ $mod $head $comp] $jmod $j $jbar]]
#plurality
  rule
    context: |[?DP $head |[?NP @]]
    form: $noun
    setprop (number): $head.number
#possession
  rule
    form: |[DP $spec:DP $mod? $head $comp?]
    result: |[DP [GEN $spec $head] $mod ~ $comp]
  rule
    form: [GEN |[?DP $dh? |[?NP $noun ~]] $gen]
    result: |[?DP $dh |[?NP $noun ~]]
    setprop ($noun.case): gen
#subject position
  rule
    form: |[IP ~ $imod? $ihead |[VP $subj $mod? $head $comp?]]
    result: |[IP $subj $imod $ihead |[VP ~ $mod $head $comp]]
#rotations
  rotate: Vmod
